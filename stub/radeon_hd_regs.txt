case 0x44: return "SQ_WAVE_MODE";
case 0x48: return "SQ_WAVE_STATUS";
case 0x4c: return "SQ_WAVE_TRAPSTS";
case 0x50: return "SQ_WAVE_HW_ID";
case 0x54: return "SQ_WAVE_GPR_ALLOC";
case 0x58: return "SQ_WAVE_LDS_ALLOC";
case 0x5c: return "SQ_WAVE_IB_STS";
case 0x60: return "SQ_WAVE_PC_LO";
case 0x64: return "SQ_WAVE_PC_HI";
case 0x68: return "SQ_WAVE_INST_DW0";
case 0x6c: return "SQ_WAVE_INST_DW1";
case 0x70: return "SQ_WAVE_IB_DBG0";
case 0x9b0: return "SQ_WAVE_TBA_LO";
case 0x9b4: return "SQ_WAVE_TBA_HI";
case 0x9b8: return "SQ_WAVE_TMA_LO";
case 0x9bc: return "SQ_WAVE_TMA_HI";
case 0x9c0: return "SQ_WAVE_TTMP0";
case 0x9c4: return "SQ_WAVE_TTMP1";
case 0x9c8: return "SQ_WAVE_TTMP2";
case 0x9cc: return "SQ_WAVE_TTMP3";
case 0x9d0: return "SQ_WAVE_TTMP4";
case 0x9d4: return "SQ_WAVE_TTMP5";
case 0x9d8: return "SQ_WAVE_TTMP6";
case 0x9dc: return "SQ_WAVE_TTMP7";
case 0x9e0: return "SQ_WAVE_TTMP8";
case 0x9e4: return "SQ_WAVE_TTMP9";
case 0x9e8: return "SQ_WAVE_TTMP10";
case 0x9ec: return "SQ_WAVE_TTMP11";
case 0x9f0: return "SQ_WAVE_M0";
case 0x9f8: return "SQ_WAVE_EXEC_LO";
case 0x9fc: return "SQ_WAVE_EXEC_HI";
case 0x8000: return "GRBM_CNTL";
case 0x8004: return "GRBM_SKEW_CNTL";
case 0x8008: return "GRBM_STATUS2";
case 0x800c: return "GRBM_PWR_CNTL";
case 0x8010: return "GRBM_STATUS";
case 0x8014: return "GRBM_STATUS_SE0";
case 0x8018: return "GRBM_STATUS_SE1";
case 0x8020: return "GRBM_SOFT_RESET";
case 0x8024: return "GRBM_DEBUG_CNTL";
case 0x8028: return "GRBM_DEBUG_DATA";
case 0x802c: return "GRBM_GFX_INDEX";
case 0x8030: return "GRBM_GFX_CLKEN_CNTL";
case 0x8034: return "GRBM_WAIT_IDLE_CLOCKS";
case 0x8050: return "GRBM_DEBUG";
case 0x8054: return "GRBM_DEBUG_SNAPSHOT";
case 0x8058: return "GRBM_READ_ERROR";
case 0x8060: return "GRBM_INT_CNTL";
case 0x8070: return "GRBM_PERFCOUNTER0_SELECT";
case 0x8074: return "GRBM_PERFCOUNTER1_SELECT";
case 0x8078: return "GRBM_PERFCOUNTER0_LO";
case 0x807c: return "GRBM_PERFCOUNTER0_HI";
case 0x8080: return "GRBM_PERFCOUNTER1_LO";
case 0x8084: return "GRBM_PERFCOUNTER1_HI";
case 0x8098: return "GRBM_SE0_PERFCOUNTER_SELECT";
case 0x809c: return "GRBM_SE1_PERFCOUNTER_SELECT";
case 0x80a8: return "GRBM_SE0_PERFCOUNTER_LO";
case 0x80ac: return "GRBM_SE0_PERFCOUNTER_HI";
case 0x80b0: return "GRBM_SE1_PERFCOUNTER_LO";
case 0x80b4: return "GRBM_SE1_PERFCOUNTER_HI";
case 0x80f0: return "DEBUG_INDEX";
case 0x80f4: return "DEBUG_DATA";
case 0x80fc: return "GRBM_NOWHERE";
case 0x8100: return "GRBM_SCRATCH_REG0";
case 0x8104: return "GRBM_SCRATCH_REG1";
case 0x8108: return "GRBM_SCRATCH_REG2";
case 0x810c: return "GRBM_SCRATCH_REG3";
case 0x8110: return "GRBM_SCRATCH_REG4";
case 0x8114: return "GRBM_SCRATCH_REG5";
case 0x8118: return "GRBM_SCRATCH_REG6";
case 0x811c: return "GRBM_SCRATCH_REG7";
case 0x8300: return "SQ_INTERRUPT_WORD_AUTO";
case 0x8400: return "CP_EOP_DONE_ADDR_LO";
case 0x8404: return "CP_EOP_DONE_ADDR_HI";
case 0x8408: return "CP_EOP_DONE_DATA_LO";
case 0x840c: return "CP_EOP_DONE_DATA_HI";
case 0x8410: return "CP_EOP_LAST_FENCE_LO";
case 0x8414: return "CP_EOP_LAST_FENCE_HI";
case 0x8418: return "CP_STREAM_OUT_ADDR_LO";
case 0x841c: return "CP_STREAM_OUT_ADDR_HI";
case 0x8420: return "CP_NUM_PRIM_WRITTEN_COUNT0_LO";
case 0x8424: return "CP_NUM_PRIM_WRITTEN_COUNT0_HI";
case 0x8428: return "CP_NUM_PRIM_NEEDED_COUNT0_LO";
case 0x842c: return "CP_NUM_PRIM_NEEDED_COUNT0_HI";
case 0x8430: return "CP_NUM_PRIM_WRITTEN_COUNT1_LO";
case 0x8434: return "CP_NUM_PRIM_WRITTEN_COUNT1_HI";
case 0x8438: return "CP_NUM_PRIM_NEEDED_COUNT1_LO";
case 0x843c: return "CP_NUM_PRIM_NEEDED_COUNT1_HI";
case 0x8440: return "CP_NUM_PRIM_WRITTEN_COUNT2_LO";
case 0x8444: return "CP_NUM_PRIM_WRITTEN_COUNT2_HI";
case 0x8448: return "CP_NUM_PRIM_NEEDED_COUNT2_LO";
case 0x844c: return "CP_NUM_PRIM_NEEDED_COUNT2_HI";
case 0x8450: return "CP_NUM_PRIM_WRITTEN_COUNT3_LO";
case 0x8454: return "CP_NUM_PRIM_WRITTEN_COUNT3_HI";
case 0x8458: return "CP_NUM_PRIM_NEEDED_COUNT3_LO";
case 0x845c: return "CP_NUM_PRIM_NEEDED_COUNT3_HI";
case 0x8460: return "CP_PIPE_STATS_ADDR_LO";
case 0x8464: return "CP_PIPE_STATS_ADDR_HI";
case 0x8468: return "CP_VGT_IAVERT_COUNT_LO";
case 0x846c: return "CP_VGT_IAVERT_COUNT_HI";
case 0x8470: return "CP_VGT_IAPRIM_COUNT_LO";
case 0x8474: return "CP_VGT_IAPRIM_COUNT_HI";
case 0x8478: return "CP_VGT_GSPRIM_COUNT_LO";
case 0x847c: return "CP_VGT_GSPRIM_COUNT_HI";
case 0x8480: return "CP_VGT_VSINVOC_COUNT_LO";
case 0x8484: return "CP_VGT_VSINVOC_COUNT_HI";
case 0x8488: return "CP_VGT_GSINVOC_COUNT_LO";
case 0x848c: return "CP_VGT_GSINVOC_COUNT_HI";
case 0x8490: return "CP_VGT_HSINVOC_COUNT_LO";
case 0x8494: return "CP_VGT_HSINVOC_COUNT_HI";
case 0x8498: return "CP_VGT_DSINVOC_COUNT_LO";
case 0x849c: return "CP_VGT_DSINVOC_COUNT_HI";
case 0x84a0: return "CP_PA_CINVOC_COUNT_LO";
case 0x84a4: return "CP_PA_CINVOC_COUNT_HI";
case 0x84a8: return "CP_PA_CPRIM_COUNT_LO";
case 0x84ac: return "CP_PA_CPRIM_COUNT_HI";
case 0x84b0: return "CP_SC_PSINVOC_COUNT0_LO";
case 0x84b4: return "CP_SC_PSINVOC_COUNT0_HI";
case 0x84b8: return "CP_SC_PSINVOC_COUNT1_LO";
case 0x84bc: return "CP_SC_PSINVOC_COUNT1_HI";
case 0x84c0: return "CP_VGT_CSINVOC_COUNT_LO";
case 0x84c4: return "CP_VGT_CSINVOC_COUNT_HI";
case 0x84fc: return "CP_STRMOUT_CNTL";
case 0x8500: return "SCRATCH_REG0";
case 0x8504: return "SCRATCH_REG1";
case 0x8508: return "SCRATCH_REG2";
case 0x850c: return "SCRATCH_REG3";
case 0x8510: return "SCRATCH_REG4";
case 0x8514: return "SCRATCH_REG5";
case 0x8518: return "SCRATCH_REG6";
case 0x851c: return "SCRATCH_REG7";
case 0x8540: return "SCRATCH_UMSK";
case 0x8544: return "SCRATCH_ADDR";
case 0x8560: return "CP_APPEND_ADDR_LO";
case 0x8564: return "CP_APPEND_ADDR_HI";
case 0x8568: return "CP_APPEND_DATA";
case 0x856c: return "CP_APPEND_LAST_CS_FENCE";
case 0x8570: return "CP_APPEND_LAST_PS_FENCE";
case 0x8574: return "CP_ATOMIC_PREOP_LO";
case 0x8578: return "CP_ATOMIC_PREOP_HI";
case 0x857c: return "CP_GDS_ATOMIC0_PREOP_LO";
case 0x8580: return "CP_GDS_ATOMIC0_PREOP_HI";
case 0x8584: return "CP_GDS_ATOMIC1_PREOP_LO";
case 0x8588: return "CP_GDS_ATOMIC1_PREOP_HI";
case 0x85a4: return "CP_ME_MC_WADDR_LO";
case 0x85a8: return "CP_ME_MC_WADDR_HI";
case 0x85ac: return "CP_ME_MC_WDATA_LO";
case 0x85b0: return "CP_ME_MC_WDATA_HI";
case 0x85b4: return "CP_ME_MC_RADDR_LO";
case 0x85b8: return "CP_ME_MC_RADDR_HI";
case 0x85bc: return "CP_SEM_WAIT_TIMER";
case 0x85c0: return "CP_SIG_SEM_ADDR_LO";
case 0x85c4: return "CP_SIG_SEM_ADDR_HI";
case 0x85d0: return "CP_WAIT_REG_MEM_TIMEOUT";
case 0x85d4: return "CP_WAIT_SEM_ADDR_LO";
case 0x85d8: return "CP_WAIT_SEM_ADDR_HI";
case 0x85ec: return "CP_COHER_START_DELAY";
case 0x85f0: return "CP_COHER_CNTL";
case 0x85f4: return "CP_COHER_SIZE";
case 0x85f8: return "CP_COHER_BASE";
case 0x85fc: return "CP_COHER_STATUS";
case 0x8600: return "CP_DMA_ME_SRC_ADDR";
case 0x8604: return "CP_DMA_ME_SRC_ADDR_HI";
case 0x8608: return "CP_DMA_ME_DST_ADDR";
case 0x860c: return "CP_DMA_ME_DST_ADDR_HI";
case 0x8610: return "CP_DMA_ME_COMMAND";
case 0x8614: return "CP_DMA_PFP_SRC_ADDR";
case 0x8618: return "CP_DMA_PFP_SRC_ADDR_HI";
case 0x861c: return "CP_DMA_PFP_DST_ADDR";
case 0x8620: return "CP_DMA_PFP_DST_ADDR_HI";
case 0x8624: return "CP_DMA_PFP_COMMAND";
case 0x8628: return "CP_DMA_CNTL";
case 0x862c: return "CP_DMA_READ_TAGS";
case 0x8634: return "CP_PFP_IB_CONTROL";
case 0x8638: return "CP_PFP_LOAD_CONTROL";
case 0x863c: return "CP_SCRATCH_INDEX";
case 0x8640: return "CP_SCRATCH_DATA";
case 0x8644: return "CP_RB_OFFSET";
case 0x8648: return "CP_IB1_OFFSET";
case 0x864c: return "CP_IB2_OFFSET";
case 0x8650: return "CP_IB1_PREAMBLE_BEGIN";
case 0x8654: return "CP_IB1_PREAMBLE_END";
case 0x8658: return "CP_IB2_PREAMBLE_BEGIN";
case 0x865c: return "CP_IB2_PREAMBLE_END";
case 0x8670: return "CP_STALLED_STAT3";
case 0x8674: return "CP_STALLED_STAT1";
case 0x8678: return "CP_STALLED_STAT2";
case 0x867c: return "CP_BUSY_STAT";
case 0x8680: return "CP_STAT";
case 0x8684: return "CP_ME_HEADER_DUMP";
case 0x8688: return "CP_PFP_HEADER_DUMP";
case 0x868c: return "CP_GRBM_FREE_COUNT";
case 0x8690: return "CP_CE_HEADER_DUMP";
case 0x869c: return "CP_MC_PACK_DELAY_CNT";
case 0x86d0: return "CP_CSF_STAT";
case 0x86d4: return "CP_CSF_CNTL";
case 0x86d8: return "CP_ME_CNTL";
case 0x86e0: return "CP_CNTX_STAT";
case 0x86e4: return "CP_ME_PREEMPTION";
case 0x86f8: return "CP_RB2_RPTR";
case 0x86fc: return "CP_RB1_RPTR";
case 0x8700: return "CP_RB0_RPTR";
case 0x8704: return "CP_RB_WPTR_DELAY";
case 0x8708: return "CP_RB_WPTR_POLL_CNTL";
case 0x870c: return "CP_CE_INIT_BASE_LO";
case 0x8710: return "CP_CE_INIT_BASE_HI";
case 0x8714: return "CP_CE_INIT_BUFSZ";
case 0x8718: return "CP_CE_IB1_BASE_LO";
case 0x871c: return "CP_CE_IB1_BASE_HI";
case 0x8720: return "CP_CE_IB1_BUFSZ";
case 0x8724: return "CP_CE_IB2_BASE_LO";
case 0x8728: return "CP_CE_IB2_BASE_HI";
case 0x872c: return "CP_CE_IB2_BUFSZ";
case 0x8730: return "CP_IB1_BASE_LO";
case 0x8734: return "CP_IB1_BASE_HI";
case 0x8738: return "CP_IB1_BUFSZ";
case 0x873c: return "CP_IB2_BASE_LO";
case 0x8740: return "CP_IB2_BASE_HI";
case 0x8744: return "CP_IB2_BUFSZ";
case 0x8748: return "CP_ST_BASE_LO";
case 0x874c: return "CP_ST_BASE_HI";
case 0x8750: return "CP_ST_BUFSZ";
case 0x8754: return "CP_ROQ1_THRESHOLDS";
case 0x8758: return "CP_ROQ2_THRESHOLDS";
case 0x875c: return "CP_STQ_THRESHOLDS";
case 0x8760: return "CP_QUEUE_THRESHOLDS";
case 0x8764: return "CP_MEQ_THRESHOLDS";
case 0x8768: return "CP_ROQ_AVAIL";
case 0x876c: return "CP_STQ_AVAIL";
case 0x8770: return "CP_ROQ2_AVAIL";
case 0x8774: return "CP_MEQ_AVAIL";
case 0x8778: return "CP_CMD_INDEX";
case 0x877c: return "CP_CMD_DATA";
case 0x8780: return "CP_ROQ_RB_STAT";
case 0x8784: return "CP_ROQ_IB1_STAT";
case 0x8788: return "CP_ROQ_IB2_STAT";
case 0x878c: return "CP_STQ_STAT";
case 0x8794: return "CP_MEQ_STAT";
case 0x8798: return "CP_CEQ1_AVAIL";
case 0x879c: return "CP_CEQ2_AVAIL";
case 0x87a0: return "CP_CE_ROQ_RB_STAT";
case 0x87a4: return "CP_CE_ROQ_IB1_STAT";
case 0x87a8: return "CP_CE_ROQ_IB2_STAT";
case 0x87dc: return "CP_INT_STAT_DEBUG";
case 0x87fc: return "CP_PERFMON_CNTL";
case 0x8880: return "IA_PERFCOUNTER0_SELECT";
case 0x8884: return "IA_PERFCOUNTER1_SELECT";
case 0x8888: return "IA_PERFCOUNTER2_SELECT";
case 0x888c: return "IA_PERFCOUNTER3_SELECT";
case 0x8890: return "IA_PERFCOUNTER0_LO";
case 0x8894: return "IA_PERFCOUNTER0_HI";
case 0x8898: return "IA_PERFCOUNTER1_LO";
case 0x889c: return "IA_PERFCOUNTER1_HI";
case 0x88a0: return "IA_PERFCOUNTER2_LO";
case 0x88a4: return "IA_PERFCOUNTER2_HI";
case 0x88a8: return "IA_PERFCOUNTER3_LO";
case 0x88ac: return "IA_PERFCOUNTER3_HI";
case 0x88b0: return "VGT_VTX_VECT_EJECT_REG";
case 0x88b4: return "VGT_DMA_DATA_FIFO_DEPTH";
case 0x88b8: return "VGT_DMA_REQ_FIFO_DEPTH";
case 0x88bc: return "VGT_DRAW_INIT_FIFO_DEPTH";
case 0x88c0: return "VGT_LAST_COPY_STATE";
case 0x88c4: return "VGT_CACHE_INVALIDATION";
case 0x88c8: return "VGT_ESGS_RING_SIZE";
case 0x88cc: return "VGT_GSVS_RING_SIZE";
case 0x88d0: return "VGT_FIFO_DEPTHS";
case 0x88d4: return "VGT_GS_VERTEX_REUSE";
case 0x88d8: return "VGT_MC_LAT_CNTL";
case 0x88dc: return "IA_CNTL_STATUS";
case 0x88e0: return "VGT_DEBUG_CNTL";
case 0x88e4: return "VGT_DEBUG_DATA";
case 0x88e8: return "IA_DEBUG_CNTL";
case 0x88ec: return "IA_DEBUG_DATA";
case 0x88f0: return "VGT_CNTL_STATUS";
case 0x891c: return "VGT_PERFCOUNTER_SEID_MASK";
case 0x8920: return "VGT_PERFCOUNTER0_SELECT";
case 0x8924: return "VGT_PERFCOUNTER1_SELECT";
case 0x8928: return "VGT_PERFCOUNTER2_SELECT";
case 0x892c: return "VGT_PERFCOUNTER3_SELECT";
case 0x8930: return "VGT_PERFCOUNTER0_LO";
case 0x8934: return "VGT_PERFCOUNTER0_HI";
case 0x8938: return "VGT_PERFCOUNTER1_LO";
case 0x893c: return "VGT_PERFCOUNTER1_HI";
case 0x8940: return "VGT_PERFCOUNTER2_LO";
case 0x8944: return "VGT_PERFCOUNTER2_HI";
case 0x8948: return "VGT_PERFCOUNTER3_LO";
case 0x894c: return "VGT_PERFCOUNTER3_HI";
case 0x8958: return "VGT_PRIMITIVE_TYPE";
case 0x895c: return "VGT_INDEX_TYPE";
case 0x8960: return "VGT_STRMOUT_BUFFER_FILLED_SIZE_0";
case 0x8964: return "VGT_STRMOUT_BUFFER_FILLED_SIZE_1";
case 0x8968: return "VGT_STRMOUT_BUFFER_FILLED_SIZE_2";
case 0x896c: return "VGT_STRMOUT_BUFFER_FILLED_SIZE_3";
case 0x8970: return "VGT_NUM_INDICES";
case 0x8974: return "VGT_NUM_INSTANCES";
case 0x897c: return "CGTT_VGT_CLK_CTRL";
case 0x8980: return "IA_VMID_OVERRIDE";
case 0x8984: return "CGTT_IA_CLK_CTRL";
case 0x8988: return "VGT_TF_RING_SIZE";
case 0x898c: return "VGT_SYS_CONFIG";
case 0x89b0: return "VGT_HS_OFFCHIP_PARAM";
case 0x89b8: return "VGT_TF_MEMORY_BASE";
case 0x89bc: return "CC_GC_SHADER_ARRAY_CONFIG";
case 0x89c0: return "GC_USER_SHADER_ARRAY_CONFIG";
case 0x8a00: return "PA_SU_DEBUG_CNTL";
case 0x8a04: return "PA_SU_DEBUG_DATA";
case 0x8a10: return "PA_CL_CNTL_STATUS";
case 0x8a14: return "PA_CL_ENHANCE";
case 0x8a18: return "CGTT_PA_CLK_CTRL";
case 0x8a20: return "PA_SU_PERFCOUNTER0_SELECT";
case 0x8a24: return "PA_SU_PERFCOUNTER1_SELECT";
case 0x8a28: return "PA_SU_PERFCOUNTER2_SELECT";
case 0x8a2c: return "PA_SU_PERFCOUNTER3_SELECT";
case 0x8a30: return "PA_SU_PERFCOUNTER0_LO";
case 0x8a34: return "PA_SU_PERFCOUNTER0_HI";
case 0x8a38: return "PA_SU_PERFCOUNTER1_LO";
case 0x8a3c: return "PA_SU_PERFCOUNTER1_HI";
case 0x8a40: return "PA_SU_PERFCOUNTER2_LO";
case 0x8a44: return "PA_SU_PERFCOUNTER2_HI";
case 0x8a48: return "PA_SU_PERFCOUNTER3_LO";
case 0x8a4c: return "PA_SU_PERFCOUNTER3_HI";
case 0x8a50: return "PA_SU_CNTL_STATUS";
case 0x8a54: return "PA_SC_FIFO_DEPTH_CNTL";
case 0x8a60: return "PA_SU_LINE_STIPPLE_VALUE";
case 0x8a80: return "PA_SC_PERFCOUNTER0_SELECT";
case 0x8a84: return "PA_SC_PERFCOUNTER1_SELECT";
case 0x8a88: return "PA_SC_PERFCOUNTER2_SELECT";
case 0x8a8c: return "PA_SC_PERFCOUNTER3_SELECT";
case 0x8a90: return "PA_SC_PERFCOUNTER4_SELECT";
case 0x8a94: return "PA_SC_PERFCOUNTER5_SELECT";
case 0x8a98: return "PA_SC_PERFCOUNTER6_SELECT";
case 0x8a9c: return "PA_SC_PERFCOUNTER7_SELECT";
case 0x8aa0: return "PA_SC_PERFCOUNTER0_LO";
case 0x8aa4: return "PA_SC_PERFCOUNTER0_HI";
case 0x8aa8: return "PA_SC_PERFCOUNTER1_LO";
case 0x8aac: return "PA_SC_PERFCOUNTER1_HI";
case 0x8ab0: return "PA_SC_PERFCOUNTER2_LO";
case 0x8ab4: return "PA_SC_PERFCOUNTER2_HI";
case 0x8ab8: return "PA_SC_PERFCOUNTER3_LO";
case 0x8abc: return "PA_SC_PERFCOUNTER3_HI";
case 0x8ac0: return "PA_SC_PERFCOUNTER4_LO";
case 0x8ac4: return "PA_SC_PERFCOUNTER4_HI";
case 0x8ac8: return "PA_SC_PERFCOUNTER5_LO";
case 0x8acc: return "PA_SC_PERFCOUNTER5_HI";
case 0x8ad0: return "PA_SC_PERFCOUNTER6_LO";
case 0x8ad4: return "PA_SC_PERFCOUNTER6_HI";
case 0x8ad8: return "PA_SC_PERFCOUNTER7_LO";
case 0x8adc: return "PA_SC_PERFCOUNTER7_HI";
case 0x8b10: return "PA_SC_LINE_STIPPLE_STATE";
case 0x8b24: return "PA_SC_FORCE_EOV_MAX_CNTS";
case 0x8b28: return "CGTT_SC_CLK_CTRL";
case 0x8bcc: return "PA_SC_FIFO_SIZE";
case 0x8bd4: return "PA_SC_IF_FIFO_SIZE";
case 0x8bd8: return "PA_SC_DEBUG_CNTL";
case 0x8bdc: return "PA_SC_DEBUG_DATA";
case 0x8bf0: return "PA_SC_ENHANCE";
case 0x8c00: return "SQ_CONFIG";
case 0x8c04: return "SQC_CONFIG";
case 0x8c08: return "SQC_CACHES";
case 0x8c0c: return "SQ_RANDOM_WAVE_PRI";
case 0x8c10: return "SQ_REG_CREDITS";
case 0x8c14: return "SQ_FIFO_SIZES";
case 0x8c18: return "SQ_PERFCOUNTER_CTRL";
case 0x8c1c: return "CC_SQC_BANK_DISABLE";
case 0x8c20: return "USER_SQC_BANK_DISABLE";
case 0x8c24: return "SQ_DEBUG_STS_GLOBAL";
case 0x8c80: return "SQ_PERFCOUNTER0_LO";
case 0x8c84: return "SQ_PERFCOUNTER0_HI";
case 0x8c88: return "SQ_PERFCOUNTER1_LO";
case 0x8c8c: return "SQ_PERFCOUNTER1_HI";
case 0x8c90: return "SQ_PERFCOUNTER2_LO";
case 0x8c94: return "SQ_PERFCOUNTER2_HI";
case 0x8c98: return "SQ_PERFCOUNTER3_LO";
case 0x8c9c: return "SQ_PERFCOUNTER3_HI";
case 0x8ca0: return "SQ_PERFCOUNTER4_LO";
case 0x8ca4: return "SQ_PERFCOUNTER4_HI";
case 0x8ca8: return "SQ_PERFCOUNTER5_LO";
case 0x8cac: return "SQ_PERFCOUNTER5_HI";
case 0x8cb0: return "SQ_PERFCOUNTER6_LO";
case 0x8cb4: return "SQ_PERFCOUNTER6_HI";
case 0x8cb8: return "SQ_PERFCOUNTER7_LO";
case 0x8cbc: return "SQ_PERFCOUNTER7_HI";
case 0x8cc0: return "SQ_PERFCOUNTER8_LO";
case 0x8cc4: return "SQ_PERFCOUNTER8_HI";
case 0x8cc8: return "SQ_PERFCOUNTER9_LO";
case 0x8ccc: return "SQ_PERFCOUNTER9_HI";
case 0x8cd0: return "SQ_PERFCOUNTER10_LO";
case 0x8cd4: return "SQ_PERFCOUNTER10_HI";
case 0x8cd8: return "SQ_PERFCOUNTER11_LO";
case 0x8cdc: return "SQ_PERFCOUNTER11_HI";
case 0x8ce0: return "SQ_PERFCOUNTER12_LO";
case 0x8ce4: return "SQ_PERFCOUNTER12_HI";
case 0x8ce8: return "SQ_PERFCOUNTER13_LO";
case 0x8cec: return "SQ_PERFCOUNTER13_HI";
case 0x8cf0: return "SQ_PERFCOUNTER14_LO";
case 0x8cf4: return "SQ_PERFCOUNTER14_HI";
case 0x8cf8: return "SQ_PERFCOUNTER15_LO";
case 0x8cfc: return "SQ_PERFCOUNTER15_HI";
case 0x8d00: return "SQ_PERFCOUNTER0_SELECT";
case 0x8d04: return "SQ_PERFCOUNTER1_SELECT";
case 0x8d08: return "SQ_PERFCOUNTER2_SELECT";
case 0x8d0c: return "SQ_PERFCOUNTER3_SELECT";
case 0x8d10: return "SQ_PERFCOUNTER4_SELECT";
case 0x8d14: return "SQ_PERFCOUNTER5_SELECT";
case 0x8d18: return "SQ_PERFCOUNTER6_SELECT";
case 0x8d1c: return "SQ_PERFCOUNTER7_SELECT";
case 0x8d20: return "SQ_PERFCOUNTER8_SELECT";
case 0x8d24: return "SQ_PERFCOUNTER9_SELECT";
case 0x8d28: return "SQ_PERFCOUNTER10_SELECT";
case 0x8d2c: return "SQ_PERFCOUNTER11_SELECT";
case 0x8d30: return "SQ_PERFCOUNTER12_SELECT";
case 0x8d34: return "SQ_PERFCOUNTER13_SELECT";
case 0x8d38: return "SQ_PERFCOUNTER14_SELECT";
case 0x8d3c: return "SQ_PERFCOUNTER15_SELECT";
case 0x8d80: return "SQ_ALU_CLK_CTRL";
case 0x8d84: return "SQ_TEX_CLK_CTRL";
case 0x8d88: return "CGTT_SQ_CLK_CTRL";
case 0x8d8c: return "CGTT_SQG_CLK_CTRL";
case 0x8de0: return "SQ_IND_INDEX";
case 0x8de4: return "SQ_IND_DATA";
case 0x8df0: return "SQ_TIME_HI";
case 0x8df4: return "SQ_TIME_LO";
case 0x8e00: return "SQ_THREAD_TRACE_BASE";
case 0x8e04: return "SQ_THREAD_TRACE_SIZE";
case 0x8e08: return "SQ_THREAD_TRACE_MASK";
case 0x8e0c: return "SQ_THREAD_TRACE_TOKEN_MASK";
case 0x8e10: return "SQ_THREAD_TRACE_PERF_MASK";
case 0x8e20: return "SQ_THREAD_TRACE_USERDATA_0";
case 0x8e24: return "SQ_THREAD_TRACE_USERDATA_1";
case 0x8e28: return "SQ_THREAD_TRACE_USERDATA_2";
case 0x8e2c: return "SQ_THREAD_TRACE_USERDATA_3";
case 0x8e30: return "SQ_THREAD_TRACE_WPTR";
case 0x8e34: return "SQ_THREAD_TRACE_STATUS";
case 0x8e38: return "SQ_THREAD_TRACE_MODE";
case 0x8e3c: return "SQ_THREAD_TRACE_CTRL";
case 0x8e40: return "SQ_THREAD_TRACE_CNTR";
case 0x8e48: return "SQ_THREAD_TRACE_HIWATER";
case 0x8e58: return "SQ_POWER_THROTTLE";
case 0x8e5c: return "SQ_POWER_THROTTLE2";
case 0x8e60: return "SQ_LB_CTR_CTRL";
case 0x8e64: return "SQ_LB_DATA_ALU_CYCLES";
case 0x8e68: return "SQ_LB_DATA_TEX_CYCLES";
case 0x8e6c: return "SQ_LB_DATA_ALU_STALLS";
case 0x8e70: return "SQ_LB_DATA_TEX_STALLS";
case 0x8e80: return "SQC_SECDED_CNT";
case 0x8e84: return "SQ_SEC_CNT";
case 0x8e88: return "SQ_DED_CNT";
case 0x8e8c: return "SQ_DED_INFO";
case 0x8f00: return "SQ_BUF_RSRC_WORD0";
case 0x8f04: return "SQ_BUF_RSRC_WORD1";
case 0x8f08: return "SQ_BUF_RSRC_WORD2";
case 0x8f0c: return "SQ_BUF_RSRC_WORD3";
case 0x8f10: return "SQ_IMG_RSRC_WORD0";
case 0x8f14: return "SQ_IMG_RSRC_WORD1";
case 0x8f18: return "SQ_IMG_RSRC_WORD2";
case 0x8f1c: return "SQ_IMG_RSRC_WORD3";
case 0x8f20: return "SQ_IMG_RSRC_WORD4";
case 0x8f24: return "SQ_IMG_RSRC_WORD5";
case 0x8f28: return "SQ_IMG_RSRC_WORD6";
case 0x8f2c: return "SQ_IMG_RSRC_WORD7";
case 0x8f30: return "SQ_IMG_SAMP_WORD0";
case 0x8f34: return "SQ_IMG_SAMP_WORD1";
case 0x8f38: return "SQ_IMG_SAMP_WORD2";
case 0x8f3c: return "SQ_IMG_SAMP_WORD3";
case 0x9100: return "SPI_CONFIG_CNTL";
case 0x950c: return "TA_CS_BC_BASE_ADDR";
case 0x98f8: return "GB_ADDR_CONFIG";
case 0x9910: return "GB_TILE_MODE0";
case 0x9914: return "GB_TILE_MODE1";
case 0x9918: return "GB_TILE_MODE2";
case 0x991c: return "GB_TILE_MODE3";
case 0x9920: return "GB_TILE_MODE4";
case 0x9924: return "GB_TILE_MODE5";
case 0x9928: return "GB_TILE_MODE6";
case 0x992c: return "GB_TILE_MODE7";
case 0x9930: return "GB_TILE_MODE8";
case 0x9934: return "GB_TILE_MODE9";
case 0x9938: return "GB_TILE_MODE10";
case 0x993c: return "GB_TILE_MODE11";
case 0x9940: return "GB_TILE_MODE12";
case 0x9944: return "GB_TILE_MODE13";
case 0x9948: return "GB_TILE_MODE14";
case 0x994c: return "GB_TILE_MODE15";
case 0x9950: return "GB_TILE_MODE16";
case 0x9954: return "GB_TILE_MODE17";
case 0x9958: return "GB_TILE_MODE18";
case 0x995c: return "GB_TILE_MODE19";
case 0x9960: return "GB_TILE_MODE20";
case 0x9964: return "GB_TILE_MODE21";
case 0x9968: return "GB_TILE_MODE22";
case 0x996c: return "GB_TILE_MODE23";
case 0x9970: return "GB_TILE_MODE24";
case 0x9974: return "GB_TILE_MODE25";
case 0x9978: return "GB_TILE_MODE26";
case 0x997c: return "GB_TILE_MODE27";
case 0x9980: return "GB_TILE_MODE28";
case 0x9984: return "GB_TILE_MODE29";
case 0x9988: return "GB_TILE_MODE30";
case 0x998c: return "GB_TILE_MODE31";
case 0xb000: return "SPI_SHADER_TBA_LO_PS";
case 0xb004: return "SPI_SHADER_TBA_HI_PS";
case 0xb008: return "SPI_SHADER_TMA_LO_PS";
case 0xb00c: return "SPI_SHADER_TMA_HI_PS";
case 0xb020: return "SPI_SHADER_PGM_LO_PS";
case 0xb024: return "SPI_SHADER_PGM_HI_PS";
case 0xb028: return "SPI_SHADER_PGM_RSRC1_PS";
case 0xb02c: return "SPI_SHADER_PGM_RSRC2_PS";
case 0xb030: return "SPI_SHADER_USER_DATA_PS_0";
case 0xb034: return "SPI_SHADER_USER_DATA_PS_1";
case 0xb038: return "SPI_SHADER_USER_DATA_PS_2";
case 0xb03c: return "SPI_SHADER_USER_DATA_PS_3";
case 0xb040: return "SPI_SHADER_USER_DATA_PS_4";
case 0xb044: return "SPI_SHADER_USER_DATA_PS_5";
case 0xb048: return "SPI_SHADER_USER_DATA_PS_6";
case 0xb04c: return "SPI_SHADER_USER_DATA_PS_7";
case 0xb050: return "SPI_SHADER_USER_DATA_PS_8";
case 0xb054: return "SPI_SHADER_USER_DATA_PS_9";
case 0xb058: return "SPI_SHADER_USER_DATA_PS_10";
case 0xb05c: return "SPI_SHADER_USER_DATA_PS_11";
case 0xb060: return "SPI_SHADER_USER_DATA_PS_12";
case 0xb064: return "SPI_SHADER_USER_DATA_PS_13";
case 0xb068: return "SPI_SHADER_USER_DATA_PS_14";
case 0xb06c: return "SPI_SHADER_USER_DATA_PS_15";
case 0xb100: return "SPI_SHADER_TBA_LO_VS";
case 0xb104: return "SPI_SHADER_TBA_HI_VS";
case 0xb108: return "SPI_SHADER_TMA_LO_VS";
case 0xb10c: return "SPI_SHADER_TMA_HI_VS";
case 0xb120: return "SPI_SHADER_PGM_LO_VS";
case 0xb124: return "SPI_SHADER_PGM_HI_VS";
case 0xb128: return "SPI_SHADER_PGM_RSRC1_VS";
case 0xb12c: return "SPI_SHADER_PGM_RSRC2_VS";
case 0xb130: return "SPI_SHADER_USER_DATA_VS_0";
case 0xb134: return "SPI_SHADER_USER_DATA_VS_1";
case 0xb138: return "SPI_SHADER_USER_DATA_VS_2";
case 0xb13c: return "SPI_SHADER_USER_DATA_VS_3";
case 0xb140: return "SPI_SHADER_USER_DATA_VS_4";
case 0xb144: return "SPI_SHADER_USER_DATA_VS_5";
case 0xb148: return "SPI_SHADER_USER_DATA_VS_6";
case 0xb14c: return "SPI_SHADER_USER_DATA_VS_7";
case 0xb150: return "SPI_SHADER_USER_DATA_VS_8";
case 0xb154: return "SPI_SHADER_USER_DATA_VS_9";
case 0xb158: return "SPI_SHADER_USER_DATA_VS_10";
case 0xb15c: return "SPI_SHADER_USER_DATA_VS_11";
case 0xb160: return "SPI_SHADER_USER_DATA_VS_12";
case 0xb164: return "SPI_SHADER_USER_DATA_VS_13";
case 0xb168: return "SPI_SHADER_USER_DATA_VS_14";
case 0xb16c: return "SPI_SHADER_USER_DATA_VS_15";
case 0xb200: return "SPI_SHADER_TBA_LO_GS";
case 0xb204: return "SPI_SHADER_TBA_HI_GS";
case 0xb208: return "SPI_SHADER_TMA_LO_GS";
case 0xb20c: return "SPI_SHADER_TMA_HI_GS";
case 0xb220: return "SPI_SHADER_PGM_LO_GS";
case 0xb224: return "SPI_SHADER_PGM_HI_GS";
case 0xb228: return "SPI_SHADER_PGM_RSRC1_GS";
case 0xb22c: return "SPI_SHADER_PGM_RSRC2_GS";
case 0xb230: return "SPI_SHADER_USER_DATA_GS_0";
case 0xb234: return "SPI_SHADER_USER_DATA_GS_1";
case 0xb238: return "SPI_SHADER_USER_DATA_GS_2";
case 0xb23c: return "SPI_SHADER_USER_DATA_GS_3";
case 0xb240: return "SPI_SHADER_USER_DATA_GS_4";
case 0xb244: return "SPI_SHADER_USER_DATA_GS_5";
case 0xb248: return "SPI_SHADER_USER_DATA_GS_6";
case 0xb24c: return "SPI_SHADER_USER_DATA_GS_7";
case 0xb250: return "SPI_SHADER_USER_DATA_GS_8";
case 0xb254: return "SPI_SHADER_USER_DATA_GS_9";
case 0xb258: return "SPI_SHADER_USER_DATA_GS_10";
case 0xb25c: return "SPI_SHADER_USER_DATA_GS_11";
case 0xb260: return "SPI_SHADER_USER_DATA_GS_12";
case 0xb264: return "SPI_SHADER_USER_DATA_GS_13";
case 0xb268: return "SPI_SHADER_USER_DATA_GS_14";
case 0xb26c: return "SPI_SHADER_USER_DATA_GS_15";
case 0xb300: return "SPI_SHADER_TBA_LO_ES";
case 0xb304: return "SPI_SHADER_TBA_HI_ES";
case 0xb308: return "SPI_SHADER_TMA_LO_ES";
case 0xb30c: return "SPI_SHADER_TMA_HI_ES";
case 0xb320: return "SPI_SHADER_PGM_LO_ES";
case 0xb324: return "SPI_SHADER_PGM_HI_ES";
case 0xb328: return "SPI_SHADER_PGM_RSRC1_ES";
case 0xb32c: return "SPI_SHADER_PGM_RSRC2_ES";
case 0xb330: return "SPI_SHADER_USER_DATA_ES_0";
case 0xb334: return "SPI_SHADER_USER_DATA_ES_1";
case 0xb338: return "SPI_SHADER_USER_DATA_ES_2";
case 0xb33c: return "SPI_SHADER_USER_DATA_ES_3";
case 0xb340: return "SPI_SHADER_USER_DATA_ES_4";
case 0xb344: return "SPI_SHADER_USER_DATA_ES_5";
case 0xb348: return "SPI_SHADER_USER_DATA_ES_6";
case 0xb34c: return "SPI_SHADER_USER_DATA_ES_7";
case 0xb350: return "SPI_SHADER_USER_DATA_ES_8";
case 0xb354: return "SPI_SHADER_USER_DATA_ES_9";
case 0xb358: return "SPI_SHADER_USER_DATA_ES_10";
case 0xb35c: return "SPI_SHADER_USER_DATA_ES_11";
case 0xb360: return "SPI_SHADER_USER_DATA_ES_12";
case 0xb364: return "SPI_SHADER_USER_DATA_ES_13";
case 0xb368: return "SPI_SHADER_USER_DATA_ES_14";
case 0xb36c: return "SPI_SHADER_USER_DATA_ES_15";
case 0xb400: return "SPI_SHADER_TBA_LO_HS";
case 0xb404: return "SPI_SHADER_TBA_HI_HS";
case 0xb408: return "SPI_SHADER_TMA_LO_HS";
case 0xb40c: return "SPI_SHADER_TMA_HI_HS";
case 0xb420: return "SPI_SHADER_PGM_LO_HS";
case 0xb424: return "SPI_SHADER_PGM_HI_HS";
case 0xb428: return "SPI_SHADER_PGM_RSRC1_HS";
case 0xb42c: return "SPI_SHADER_PGM_RSRC2_HS";
case 0xb430: return "SPI_SHADER_USER_DATA_HS_0";
case 0xb434: return "SPI_SHADER_USER_DATA_HS_1";
case 0xb438: return "SPI_SHADER_USER_DATA_HS_2";
case 0xb43c: return "SPI_SHADER_USER_DATA_HS_3";
case 0xb440: return "SPI_SHADER_USER_DATA_HS_4";
case 0xb444: return "SPI_SHADER_USER_DATA_HS_5";
case 0xb448: return "SPI_SHADER_USER_DATA_HS_6";
case 0xb44c: return "SPI_SHADER_USER_DATA_HS_7";
case 0xb450: return "SPI_SHADER_USER_DATA_HS_8";
case 0xb454: return "SPI_SHADER_USER_DATA_HS_9";
case 0xb458: return "SPI_SHADER_USER_DATA_HS_10";
case 0xb45c: return "SPI_SHADER_USER_DATA_HS_11";
case 0xb460: return "SPI_SHADER_USER_DATA_HS_12";
case 0xb464: return "SPI_SHADER_USER_DATA_HS_13";
case 0xb468: return "SPI_SHADER_USER_DATA_HS_14";
case 0xb46c: return "SPI_SHADER_USER_DATA_HS_15";
case 0xb500: return "SPI_SHADER_TBA_LO_LS";
case 0xb504: return "SPI_SHADER_TBA_HI_LS";
case 0xb508: return "SPI_SHADER_TMA_LO_LS";
case 0xb50c: return "SPI_SHADER_TMA_HI_LS";
case 0xb520: return "SPI_SHADER_PGM_LO_LS";
case 0xb524: return "SPI_SHADER_PGM_HI_LS";
case 0xb528: return "SPI_SHADER_PGM_RSRC1_LS";
case 0xb52c: return "SPI_SHADER_PGM_RSRC2_LS";
case 0xb530: return "SPI_SHADER_USER_DATA_LS_0";
case 0xb534: return "SPI_SHADER_USER_DATA_LS_1";
case 0xb538: return "SPI_SHADER_USER_DATA_LS_2";
case 0xb53c: return "SPI_SHADER_USER_DATA_LS_3";
case 0xb540: return "SPI_SHADER_USER_DATA_LS_4";
case 0xb544: return "SPI_SHADER_USER_DATA_LS_5";
case 0xb548: return "SPI_SHADER_USER_DATA_LS_6";
case 0xb54c: return "SPI_SHADER_USER_DATA_LS_7";
case 0xb550: return "SPI_SHADER_USER_DATA_LS_8";
case 0xb554: return "SPI_SHADER_USER_DATA_LS_9";
case 0xb558: return "SPI_SHADER_USER_DATA_LS_10";
case 0xb55c: return "SPI_SHADER_USER_DATA_LS_11";
case 0xb560: return "SPI_SHADER_USER_DATA_LS_12";
case 0xb564: return "SPI_SHADER_USER_DATA_LS_13";
case 0xb568: return "SPI_SHADER_USER_DATA_LS_14";
case 0xb56c: return "SPI_SHADER_USER_DATA_LS_15";
case 0xb800: return "COMPUTE_DISPATCH_INITIATOR";
case 0xb804: return "COMPUTE_DIM_X";
case 0xb808: return "COMPUTE_DIM_Y";
case 0xb80c: return "COMPUTE_DIM_Z";
case 0xb810: return "COMPUTE_START_X";
case 0xb814: return "COMPUTE_START_Y";
case 0xb818: return "COMPUTE_START_Z";
case 0xb81c: return "COMPUTE_NUM_THREAD_X";
case 0xb820: return "COMPUTE_NUM_THREAD_Y";
case 0xb824: return "COMPUTE_NUM_THREAD_Z";
case 0xb830: return "COMPUTE_PGM_LO";
case 0xb834: return "COMPUTE_PGM_HI";
case 0xb838: return "COMPUTE_TBA_LO";
case 0xb83c: return "COMPUTE_TBA_HI";
case 0xb840: return "COMPUTE_TMA_LO";
case 0xb844: return "COMPUTE_TMA_HI";
case 0xb848: return "COMPUTE_PGM_RSRC1";
case 0xb84c: return "COMPUTE_PGM_RSRC2";
case 0xb850: return "COMPUTE_VMID";
case 0xb854: return "COMPUTE_RESOURCE_LIMITS";
case 0xb858: return "COMPUTE_STATIC_THREAD_MGMT_SE0";
case 0xb85c: return "COMPUTE_STATIC_THREAD_MGMT_SE1";
case 0xb860: return "COMPUTE_TMPRING_SIZE";
case 0xb900: return "COMPUTE_USER_DATA_0";
case 0xb904: return "COMPUTE_USER_DATA_1";
case 0xb908: return "COMPUTE_USER_DATA_2";
case 0xb90c: return "COMPUTE_USER_DATA_3";
case 0xb910: return "COMPUTE_USER_DATA_4";
case 0xb914: return "COMPUTE_USER_DATA_5";
case 0xb918: return "COMPUTE_USER_DATA_6";
case 0xb91c: return "COMPUTE_USER_DATA_7";
case 0xb920: return "COMPUTE_USER_DATA_8";
case 0xb924: return "COMPUTE_USER_DATA_9";
case 0xb928: return "COMPUTE_USER_DATA_10";
case 0xb92c: return "COMPUTE_USER_DATA_11";
case 0xb930: return "COMPUTE_USER_DATA_12";
case 0xb934: return "COMPUTE_USER_DATA_13";
case 0xb938: return "COMPUTE_USER_DATA_14";
case 0xb93c: return "COMPUTE_USER_DATA_15";
case 0x28000: return "DB_RENDER_CONTROL";
case 0x28004: return "DB_COUNT_CONTROL";
case 0x28008: return "DB_DEPTH_VIEW";
case 0x2800c: return "DB_RENDER_OVERRIDE";
case 0x28010: return "DB_RENDER_OVERRIDE2";
case 0x28014: return "DB_HTILE_DATA_BASE";
case 0x28020: return "DB_DEPTH_BOUNDS_MIN";
case 0x28024: return "DB_DEPTH_BOUNDS_MAX";
case 0x28028: return "DB_STENCIL_CLEAR";
case 0x2802c: return "DB_DEPTH_CLEAR";
case 0x28030: return "PA_SC_SCREEN_SCISSOR_TL";
case 0x28034: return "PA_SC_SCREEN_SCISSOR_BR";
case 0x2803c: return "DB_DEPTH_INFO";
case 0x28040: return "DB_Z_INFO";
case 0x28044: return "DB_STENCIL_INFO";
case 0x28048: return "DB_Z_READ_BASE";
case 0x2804c: return "DB_STENCIL_READ_BASE";
case 0x28050: return "DB_Z_WRITE_BASE";
case 0x28054: return "DB_STENCIL_WRITE_BASE";
case 0x28058: return "DB_DEPTH_SIZE";
case 0x2805c: return "DB_DEPTH_SLICE";
case 0x28080: return "TA_BC_BASE_ADDR";
case 0x281f8: return "COHER_DEST_BASE_2";
case 0x281fc: return "COHER_DEST_BASE_3";
case 0x28200: return "PA_SC_WINDOW_OFFSET";
case 0x28204: return "PA_SC_WINDOW_SCISSOR_TL";
case 0x28208: return "PA_SC_WINDOW_SCISSOR_BR";
case 0x2820c: return "PA_SC_CLIPRECT_RULE";
case 0x28210: return "PA_SC_CLIPRECT_0_TL";
case 0x28214: return "PA_SC_CLIPRECT_0_BR";
case 0x28218: return "PA_SC_CLIPRECT_1_TL";
case 0x2821c: return "PA_SC_CLIPRECT_1_BR";
case 0x28220: return "PA_SC_CLIPRECT_2_TL";
case 0x28224: return "PA_SC_CLIPRECT_2_BR";
case 0x28228: return "PA_SC_CLIPRECT_3_TL";
case 0x2822c: return "PA_SC_CLIPRECT_3_BR";
case 0x28230: return "PA_SC_EDGERULE";
case 0x28234: return "PA_SU_HARDWARE_SCREEN_OFFSET";
case 0x28238: return "CB_TARGET_MASK";
case 0x2823c: return "CB_SHADER_MASK";
case 0x28240: return "PA_SC_GENERIC_SCISSOR_TL";
case 0x28244: return "PA_SC_GENERIC_SCISSOR_BR";
case 0x28248: return "COHER_DEST_BASE_0";
case 0x2824c: return "COHER_DEST_BASE_1";
case 0x28250: return "PA_SC_VPORT_SCISSOR_0_TL";
case 0x28254: return "PA_SC_VPORT_SCISSOR_0_BR";
case 0x28258: return "PA_SC_VPORT_SCISSOR_1_TL";
case 0x2825c: return "PA_SC_VPORT_SCISSOR_1_BR";
case 0x28260: return "PA_SC_VPORT_SCISSOR_2_TL";
case 0x28264: return "PA_SC_VPORT_SCISSOR_2_BR";
case 0x28268: return "PA_SC_VPORT_SCISSOR_3_TL";
case 0x2826c: return "PA_SC_VPORT_SCISSOR_3_BR";
case 0x28270: return "PA_SC_VPORT_SCISSOR_4_TL";
case 0x28274: return "PA_SC_VPORT_SCISSOR_4_BR";
case 0x28278: return "PA_SC_VPORT_SCISSOR_5_TL";
case 0x2827c: return "PA_SC_VPORT_SCISSOR_5_BR";
case 0x28280: return "PA_SC_VPORT_SCISSOR_6_TL";
case 0x28284: return "PA_SC_VPORT_SCISSOR_6_BR";
case 0x28288: return "PA_SC_VPORT_SCISSOR_7_TL";
case 0x2828c: return "PA_SC_VPORT_SCISSOR_7_BR";
case 0x28290: return "PA_SC_VPORT_SCISSOR_8_TL";
case 0x28294: return "PA_SC_VPORT_SCISSOR_8_BR";
case 0x28298: return "PA_SC_VPORT_SCISSOR_9_TL";
case 0x2829c: return "PA_SC_VPORT_SCISSOR_9_BR";
case 0x282a0: return "PA_SC_VPORT_SCISSOR_10_TL";
case 0x282a4: return "PA_SC_VPORT_SCISSOR_10_BR";
case 0x282a8: return "PA_SC_VPORT_SCISSOR_11_TL";
case 0x282ac: return "PA_SC_VPORT_SCISSOR_11_BR";
case 0x282b0: return "PA_SC_VPORT_SCISSOR_12_TL";
case 0x282b4: return "PA_SC_VPORT_SCISSOR_12_BR";
case 0x282b8: return "PA_SC_VPORT_SCISSOR_13_TL";
case 0x282bc: return "PA_SC_VPORT_SCISSOR_13_BR";
case 0x282c0: return "PA_SC_VPORT_SCISSOR_14_TL";
case 0x282c4: return "PA_SC_VPORT_SCISSOR_14_BR";
case 0x282c8: return "PA_SC_VPORT_SCISSOR_15_TL";
case 0x282cc: return "PA_SC_VPORT_SCISSOR_15_BR";
case 0x282d0: return "PA_SC_VPORT_ZMIN_0";
case 0x282d4: return "PA_SC_VPORT_ZMAX_0";
case 0x282d8: return "PA_SC_VPORT_ZMIN_1";
case 0x282dc: return "PA_SC_VPORT_ZMAX_1";
case 0x282e0: return "PA_SC_VPORT_ZMIN_2";
case 0x282e4: return "PA_SC_VPORT_ZMAX_2";
case 0x282e8: return "PA_SC_VPORT_ZMIN_3";
case 0x282ec: return "PA_SC_VPORT_ZMAX_3";
case 0x282f0: return "PA_SC_VPORT_ZMIN_4";
case 0x282f4: return "PA_SC_VPORT_ZMAX_4";
case 0x282f8: return "PA_SC_VPORT_ZMIN_5";
case 0x282fc: return "PA_SC_VPORT_ZMAX_5";
case 0x28300: return "PA_SC_VPORT_ZMIN_6";
case 0x28304: return "PA_SC_VPORT_ZMAX_6";
case 0x28308: return "PA_SC_VPORT_ZMIN_7";
case 0x2830c: return "PA_SC_VPORT_ZMAX_7";
case 0x28310: return "PA_SC_VPORT_ZMIN_8";
case 0x28314: return "PA_SC_VPORT_ZMAX_8";
case 0x28318: return "PA_SC_VPORT_ZMIN_9";
case 0x2831c: return "PA_SC_VPORT_ZMAX_9";
case 0x28320: return "PA_SC_VPORT_ZMIN_10";
case 0x28324: return "PA_SC_VPORT_ZMAX_10";
case 0x28328: return "PA_SC_VPORT_ZMIN_11";
case 0x2832c: return "PA_SC_VPORT_ZMAX_11";
case 0x28330: return "PA_SC_VPORT_ZMIN_12";
case 0x28334: return "PA_SC_VPORT_ZMAX_12";
case 0x28338: return "PA_SC_VPORT_ZMIN_13";
case 0x2833c: return "PA_SC_VPORT_ZMAX_13";
case 0x28340: return "PA_SC_VPORT_ZMIN_14";
case 0x28344: return "PA_SC_VPORT_ZMAX_14";
case 0x28348: return "PA_SC_VPORT_ZMIN_15";
case 0x2834c: return "PA_SC_VPORT_ZMAX_15";
case 0x28350: return "PA_SC_RASTER_CONFIG";
case 0x28360: return "CP_PERFMON_CNTX_CNTL";
case 0x28364: return "CP_RINGID";
case 0x28368: return "CP_VMID";
case 0x28400: return "VGT_MAX_VTX_INDX";
case 0x28404: return "VGT_MIN_VTX_INDX";
case 0x28408: return "VGT_INDX_OFFSET";
case 0x2840c: return "VGT_MULTI_PRIM_IB_RESET_INDX";
case 0x28414: return "CB_BLEND_RED";
case 0x28418: return "CB_BLEND_GREEN";
case 0x2841c: return "CB_BLEND_BLUE";
case 0x28420: return "CB_BLEND_ALPHA";
case 0x2842c: return "DB_STENCIL_CONTROL";
case 0x28430: return "DB_STENCILREFMASK";
case 0x28434: return "DB_STENCILREFMASK_BF";
case 0x2843c: return "PA_CL_VPORT_XSCALE";
case 0x28440: return "PA_CL_VPORT_XOFFSET";
case 0x28444: return "PA_CL_VPORT_YSCALE";
case 0x28448: return "PA_CL_VPORT_YOFFSET";
case 0x2844c: return "PA_CL_VPORT_ZSCALE";
case 0x28450: return "PA_CL_VPORT_ZOFFSET";
case 0x28454: return "PA_CL_VPORT_XSCALE_1";
case 0x28458: return "PA_CL_VPORT_XOFFSET_1";
case 0x2845c: return "PA_CL_VPORT_YSCALE_1";
case 0x28460: return "PA_CL_VPORT_YOFFSET_1";
case 0x28464: return "PA_CL_VPORT_ZSCALE_1";
case 0x28468: return "PA_CL_VPORT_ZOFFSET_1";
case 0x2846c: return "PA_CL_VPORT_XSCALE_2";
case 0x28470: return "PA_CL_VPORT_XOFFSET_2";
case 0x28474: return "PA_CL_VPORT_YSCALE_2";
case 0x28478: return "PA_CL_VPORT_YOFFSET_2";
case 0x2847c: return "PA_CL_VPORT_ZSCALE_2";
case 0x28480: return "PA_CL_VPORT_ZOFFSET_2";
case 0x28484: return "PA_CL_VPORT_XSCALE_3";
case 0x28488: return "PA_CL_VPORT_XOFFSET_3";
case 0x2848c: return "PA_CL_VPORT_YSCALE_3";
case 0x28490: return "PA_CL_VPORT_YOFFSET_3";
case 0x28494: return "PA_CL_VPORT_ZSCALE_3";
case 0x28498: return "PA_CL_VPORT_ZOFFSET_3";
case 0x2849c: return "PA_CL_VPORT_XSCALE_4";
case 0x284a0: return "PA_CL_VPORT_XOFFSET_4";
case 0x284a4: return "PA_CL_VPORT_YSCALE_4";
case 0x284a8: return "PA_CL_VPORT_YOFFSET_4";
case 0x284ac: return "PA_CL_VPORT_ZSCALE_4";
case 0x284b0: return "PA_CL_VPORT_ZOFFSET_4";
case 0x284b4: return "PA_CL_VPORT_XSCALE_5";
case 0x284b8: return "PA_CL_VPORT_XOFFSET_5";
case 0x284bc: return "PA_CL_VPORT_YSCALE_5";
case 0x284c0: return "PA_CL_VPORT_YOFFSET_5";
case 0x284c4: return "PA_CL_VPORT_ZSCALE_5";
case 0x284c8: return "PA_CL_VPORT_ZOFFSET_5";
case 0x284cc: return "PA_CL_VPORT_XSCALE_6";
case 0x284d0: return "PA_CL_VPORT_XOFFSET_6";
case 0x284d4: return "PA_CL_VPORT_YSCALE_6";
case 0x284d8: return "PA_CL_VPORT_YOFFSET_6";
case 0x284dc: return "PA_CL_VPORT_ZSCALE_6";
case 0x284e0: return "PA_CL_VPORT_ZOFFSET_6";
case 0x284e4: return "PA_CL_VPORT_XSCALE_7";
case 0x284e8: return "PA_CL_VPORT_XOFFSET_7";
case 0x284ec: return "PA_CL_VPORT_YSCALE_7";
case 0x284f0: return "PA_CL_VPORT_YOFFSET_7";
case 0x284f4: return "PA_CL_VPORT_ZSCALE_7";
case 0x284f8: return "PA_CL_VPORT_ZOFFSET_7";
case 0x284fc: return "PA_CL_VPORT_XSCALE_8";
case 0x28500: return "PA_CL_VPORT_XOFFSET_8";
case 0x28504: return "PA_CL_VPORT_YSCALE_8";
case 0x28508: return "PA_CL_VPORT_YOFFSET_8";
case 0x2850c: return "PA_CL_VPORT_ZSCALE_8";
case 0x28510: return "PA_CL_VPORT_ZOFFSET_8";
case 0x28514: return "PA_CL_VPORT_XSCALE_9";
case 0x28518: return "PA_CL_VPORT_XOFFSET_9";
case 0x2851c: return "PA_CL_VPORT_YSCALE_9";
case 0x28520: return "PA_CL_VPORT_YOFFSET_9";
case 0x28524: return "PA_CL_VPORT_ZSCALE_9";
case 0x28528: return "PA_CL_VPORT_ZOFFSET_9";
case 0x2852c: return "PA_CL_VPORT_XSCALE_10";
case 0x28530: return "PA_CL_VPORT_XOFFSET_10";
case 0x28534: return "PA_CL_VPORT_YSCALE_10";
case 0x28538: return "PA_CL_VPORT_YOFFSET_10";
case 0x2853c: return "PA_CL_VPORT_ZSCALE_10";
case 0x28540: return "PA_CL_VPORT_ZOFFSET_10";
case 0x28544: return "PA_CL_VPORT_XSCALE_11";
case 0x28548: return "PA_CL_VPORT_XOFFSET_11";
case 0x2854c: return "PA_CL_VPORT_YSCALE_11";
case 0x28550: return "PA_CL_VPORT_YOFFSET_11";
case 0x28554: return "PA_CL_VPORT_ZSCALE_11";
case 0x28558: return "PA_CL_VPORT_ZOFFSET_11";
case 0x2855c: return "PA_CL_VPORT_XSCALE_12";
case 0x28560: return "PA_CL_VPORT_XOFFSET_12";
case 0x28564: return "PA_CL_VPORT_YSCALE_12";
case 0x28568: return "PA_CL_VPORT_YOFFSET_12";
case 0x2856c: return "PA_CL_VPORT_ZSCALE_12";
case 0x28570: return "PA_CL_VPORT_ZOFFSET_12";
case 0x28574: return "PA_CL_VPORT_XSCALE_13";
case 0x28578: return "PA_CL_VPORT_XOFFSET_13";
case 0x2857c: return "PA_CL_VPORT_YSCALE_13";
case 0x28580: return "PA_CL_VPORT_YOFFSET_13";
case 0x28584: return "PA_CL_VPORT_ZSCALE_13";
case 0x28588: return "PA_CL_VPORT_ZOFFSET_13";
case 0x2858c: return "PA_CL_VPORT_XSCALE_14";
case 0x28590: return "PA_CL_VPORT_XOFFSET_14";
case 0x28594: return "PA_CL_VPORT_YSCALE_14";
case 0x28598: return "PA_CL_VPORT_YOFFSET_14";
case 0x2859c: return "PA_CL_VPORT_ZSCALE_14";
case 0x285a0: return "PA_CL_VPORT_ZOFFSET_14";
case 0x285a4: return "PA_CL_VPORT_XSCALE_15";
case 0x285a8: return "PA_CL_VPORT_XOFFSET_15";
case 0x285ac: return "PA_CL_VPORT_YSCALE_15";
case 0x285b0: return "PA_CL_VPORT_YOFFSET_15";
case 0x285b4: return "PA_CL_VPORT_ZSCALE_15";
case 0x285b8: return "PA_CL_VPORT_ZOFFSET_15";
case 0x285bc: return "PA_CL_UCP_0_X";
case 0x285c0: return "PA_CL_UCP_0_Y";
case 0x285c4: return "PA_CL_UCP_0_Z";
case 0x285c8: return "PA_CL_UCP_0_W";
case 0x285cc: return "PA_CL_UCP_1_X";
case 0x285d0: return "PA_CL_UCP_1_Y";
case 0x285d4: return "PA_CL_UCP_1_Z";
case 0x285d8: return "PA_CL_UCP_1_W";
case 0x285dc: return "PA_CL_UCP_2_X";
case 0x285e0: return "PA_CL_UCP_2_Y";
case 0x285e4: return "PA_CL_UCP_2_Z";
case 0x285e8: return "PA_CL_UCP_2_W";
case 0x285ec: return "PA_CL_UCP_3_X";
case 0x285f0: return "PA_CL_UCP_3_Y";
case 0x285f4: return "PA_CL_UCP_3_Z";
case 0x285f8: return "PA_CL_UCP_3_W";
case 0x285fc: return "PA_CL_UCP_4_X";
case 0x28600: return "PA_CL_UCP_4_Y";
case 0x28604: return "PA_CL_UCP_4_Z";
case 0x28608: return "PA_CL_UCP_4_W";
case 0x2860c: return "PA_CL_UCP_5_X";
case 0x28610: return "PA_CL_UCP_5_Y";
case 0x28614: return "PA_CL_UCP_5_Z";
case 0x28618: return "PA_CL_UCP_5_W";
case 0x28644: return "SPI_PS_INPUT_CNTL_0";
case 0x28648: return "SPI_PS_INPUT_CNTL_1";
case 0x2864c: return "SPI_PS_INPUT_CNTL_2";
case 0x28650: return "SPI_PS_INPUT_CNTL_3";
case 0x28654: return "SPI_PS_INPUT_CNTL_4";
case 0x28658: return "SPI_PS_INPUT_CNTL_5";
case 0x2865c: return "SPI_PS_INPUT_CNTL_6";
case 0x28660: return "SPI_PS_INPUT_CNTL_7";
case 0x28664: return "SPI_PS_INPUT_CNTL_8";
case 0x28668: return "SPI_PS_INPUT_CNTL_9";
case 0x2866c: return "SPI_PS_INPUT_CNTL_10";
case 0x28670: return "SPI_PS_INPUT_CNTL_11";
case 0x28674: return "SPI_PS_INPUT_CNTL_12";
case 0x28678: return "SPI_PS_INPUT_CNTL_13";
case 0x2867c: return "SPI_PS_INPUT_CNTL_14";
case 0x28680: return "SPI_PS_INPUT_CNTL_15";
case 0x28684: return "SPI_PS_INPUT_CNTL_16";
case 0x28688: return "SPI_PS_INPUT_CNTL_17";
case 0x2868c: return "SPI_PS_INPUT_CNTL_18";
case 0x28690: return "SPI_PS_INPUT_CNTL_19";
case 0x28694: return "SPI_PS_INPUT_CNTL_20";
case 0x28698: return "SPI_PS_INPUT_CNTL_21";
case 0x2869c: return "SPI_PS_INPUT_CNTL_22";
case 0x286a0: return "SPI_PS_INPUT_CNTL_23";
case 0x286a4: return "SPI_PS_INPUT_CNTL_24";
case 0x286a8: return "SPI_PS_INPUT_CNTL_25";
case 0x286ac: return "SPI_PS_INPUT_CNTL_26";
case 0x286b0: return "SPI_PS_INPUT_CNTL_27";
case 0x286b4: return "SPI_PS_INPUT_CNTL_28";
case 0x286b8: return "SPI_PS_INPUT_CNTL_29";
case 0x286bc: return "SPI_PS_INPUT_CNTL_30";
case 0x286c0: return "SPI_PS_INPUT_CNTL_31";
case 0x286c4: return "SPI_VS_OUT_CONFIG";
case 0x286cc: return "SPI_PS_INPUT_ENA";
case 0x286d0: return "SPI_PS_INPUT_ADDR";
case 0x286d4: return "SPI_INTERP_CONTROL_0";
case 0x286d8: return "SPI_PS_IN_CONTROL";
case 0x286e0: return "SPI_BARYC_CNTL";
case 0x286e8: return "SPI_TMPRING_SIZE";
case 0x2870c: return "SPI_SHADER_POS_FORMAT";
case 0x28710: return "SPI_SHADER_Z_FORMAT";
case 0x28714: return "SPI_SHADER_COL_FORMAT";
case 0x28780: return "CB_BLEND0_CONTROL";
case 0x28784: return "CB_BLEND1_CONTROL";
case 0x28788: return "CB_BLEND2_CONTROL";
case 0x2878c: return "CB_BLEND3_CONTROL";
case 0x28790: return "CB_BLEND4_CONTROL";
case 0x28794: return "CB_BLEND5_CONTROL";
case 0x28798: return "CB_BLEND6_CONTROL";
case 0x2879c: return "CB_BLEND7_CONTROL";
case 0x287cc: return "CS_COPY_STATE";
case 0x287d0: return "GFX_COPY_STATE";
case 0x287d4: return "PA_CL_POINT_X_RAD";
case 0x287d8: return "PA_CL_POINT_Y_RAD";
case 0x287dc: return "PA_CL_POINT_SIZE";
case 0x287e0: return "PA_CL_POINT_CULL_RAD";
case 0x287e4: return "VGT_DMA_BASE_HI";
case 0x287e8: return "VGT_DMA_BASE";
case 0x287f0: return "VGT_DRAW_INITIATOR";
case 0x287f4: return "VGT_IMMED_DATA";
case 0x287f8: return "VGT_EVENT_ADDRESS_REG";
case 0x28800: return "DB_DEPTH_CONTROL";
case 0x28804: return "DB_EQAA";
case 0x28808: return "CB_COLOR_CONTROL";
case 0x2880c: return "DB_SHADER_CONTROL";
case 0x28810: return "PA_CL_CLIP_CNTL";
case 0x28814: return "PA_SU_SC_MODE_CNTL";
case 0x28818: return "PA_CL_VTE_CNTL";
case 0x2881c: return "PA_CL_VS_OUT_CNTL";
case 0x28820: return "PA_CL_NANINF_CNTL";
case 0x28824: return "PA_SU_LINE_STIPPLE_CNTL";
case 0x28828: return "PA_SU_LINE_STIPPLE_SCALE";
case 0x2882c: return "PA_SU_PRIM_FILTER_CNTL";
case 0x28a00: return "PA_SU_POINT_SIZE";
case 0x28a04: return "PA_SU_POINT_MINMAX";
case 0x28a08: return "PA_SU_LINE_CNTL";
case 0x28a0c: return "PA_SC_LINE_STIPPLE";
case 0x28a10: return "VGT_OUTPUT_PATH_CNTL";
case 0x28a14: return "VGT_HOS_CNTL";
case 0x28a18: return "VGT_HOS_MAX_TESS_LEVEL";
case 0x28a1c: return "VGT_HOS_MIN_TESS_LEVEL";
case 0x28a20: return "VGT_HOS_REUSE_DEPTH";
case 0x28a24: return "VGT_GROUP_PRIM_TYPE";
case 0x28a28: return "VGT_GROUP_FIRST_DECR";
case 0x28a2c: return "VGT_GROUP_DECR";
case 0x28a30: return "VGT_GROUP_VECT_0_CNTL";
case 0x28a34: return "VGT_GROUP_VECT_1_CNTL";
case 0x28a38: return "VGT_GROUP_VECT_0_FMT_CNTL";
case 0x28a3c: return "VGT_GROUP_VECT_1_FMT_CNTL";
case 0x28a40: return "VGT_GS_MODE";
case 0x28a48: return "PA_SC_MODE_CNTL_0";
case 0x28a4c: return "PA_SC_MODE_CNTL_1";
case 0x28a50: return "VGT_ENHANCE";
case 0x28a54: return "VGT_GS_PER_ES";
case 0x28a58: return "VGT_ES_PER_GS";
case 0x28a5c: return "VGT_GS_PER_VS";
case 0x28a60: return "VGT_GSVS_RING_OFFSET_1";
case 0x28a64: return "VGT_GSVS_RING_OFFSET_2";
case 0x28a68: return "VGT_GSVS_RING_OFFSET_3";
case 0x28a6c: return "VGT_GS_OUT_PRIM_TYPE";
case 0x28a70: return "IA_ENHANCE";
case 0x28a74: return "VGT_DMA_SIZE";
case 0x28a78: return "VGT_DMA_MAX_SIZE";
case 0x28a7c: return "VGT_DMA_INDEX_TYPE";
case 0x28a84: return "VGT_PRIMITIVEID_EN";
case 0x28a88: return "VGT_DMA_NUM_INSTANCES";
case 0x28a8c: return "VGT_PRIMITIVEID_RESET";
case 0x28a90: return "VGT_EVENT_INITIATOR";
case 0x28a94: return "VGT_MULTI_PRIM_IB_RESET_EN";
case 0x28aa0: return "VGT_INSTANCE_STEP_RATE_0";
case 0x28aa4: return "VGT_INSTANCE_STEP_RATE_1";
case 0x28aa8: return "IA_MULTI_VGT_PARAM";
case 0x28aac: return "VGT_ESGS_RING_ITEMSIZE";
case 0x28ab0: return "VGT_GSVS_RING_ITEMSIZE";
case 0x28ab4: return "VGT_REUSE_OFF";
case 0x28ab8: return "VGT_VTX_CNT_EN";
case 0x28abc: return "DB_HTILE_SURFACE";
case 0x28ac0: return "DB_SRESULTS_COMPARE_STATE0";
case 0x28ac4: return "DB_SRESULTS_COMPARE_STATE1";
case 0x28ac8: return "DB_PRELOAD_CONTROL";
case 0x28ad0: return "VGT_STRMOUT_BUFFER_SIZE_0";
case 0x28ad4: return "VGT_STRMOUT_VTX_STRIDE_0";
case 0x28adc: return "VGT_STRMOUT_BUFFER_OFFSET_0";
case 0x28ae0: return "VGT_STRMOUT_BUFFER_SIZE_1";
case 0x28ae4: return "VGT_STRMOUT_VTX_STRIDE_1";
case 0x28aec: return "VGT_STRMOUT_BUFFER_OFFSET_1";
case 0x28af0: return "VGT_STRMOUT_BUFFER_SIZE_2";
case 0x28af4: return "VGT_STRMOUT_VTX_STRIDE_2";
case 0x28afc: return "VGT_STRMOUT_BUFFER_OFFSET_2";
case 0x28b00: return "VGT_STRMOUT_BUFFER_SIZE_3";
case 0x28b04: return "VGT_STRMOUT_VTX_STRIDE_3";
case 0x28b0c: return "VGT_STRMOUT_BUFFER_OFFSET_3";
case 0x28b28: return "VGT_STRMOUT_DRAW_OPAQUE_OFFSET";
case 0x28b2c: return "VGT_STRMOUT_DRAW_OPAQUE_BUFFER_FILLED_SIZE";
case 0x28b30: return "VGT_STRMOUT_DRAW_OPAQUE_VERTEX_STRIDE";
case 0x28b38: return "VGT_GS_MAX_VERT_OUT";
case 0x28b54: return "VGT_SHADER_STAGES_EN";
case 0x28b58: return "VGT_LS_HS_CONFIG";
case 0x28b5c: return "VGT_GS_VERT_ITEMSIZE";
case 0x28b60: return "VGT_GS_VERT_ITEMSIZE_1";
case 0x28b64: return "VGT_GS_VERT_ITEMSIZE_2";
case 0x28b68: return "VGT_GS_VERT_ITEMSIZE_3";
case 0x28b6c: return "VGT_TF_PARAM";
case 0x28b70: return "DB_ALPHA_TO_MASK";
case 0x28b78: return "PA_SU_POLY_OFFSET_DB_FMT_CNTL";
case 0x28b7c: return "PA_SU_POLY_OFFSET_CLAMP";
case 0x28b80: return "PA_SU_POLY_OFFSET_FRONT_SCALE";
case 0x28b84: return "PA_SU_POLY_OFFSET_FRONT_OFFSET";
case 0x28b88: return "PA_SU_POLY_OFFSET_BACK_SCALE";
case 0x28b8c: return "PA_SU_POLY_OFFSET_BACK_OFFSET";
case 0x28b90: return "VGT_GS_INSTANCE_CNT";
case 0x28b94: return "VGT_STRMOUT_CONFIG";
case 0x28b98: return "VGT_STRMOUT_BUFFER_CONFIG";
case 0x28bd4: return "PA_SC_CENTROID_PRIORITY_0";
case 0x28bd8: return "PA_SC_CENTROID_PRIORITY_1";
case 0x28bdc: return "PA_SC_LINE_CNTL";
case 0x28be0: return "PA_SC_AA_CONFIG";
case 0x28be4: return "PA_SU_VTX_CNTL";
case 0x28be8: return "PA_CL_GB_VERT_CLIP_ADJ";
case 0x28bec: return "PA_CL_GB_VERT_DISC_ADJ";
case 0x28bf0: return "PA_CL_GB_HORZ_CLIP_ADJ";
case 0x28bf4: return "PA_CL_GB_HORZ_DISC_ADJ";
case 0x28bf8: return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X0Y0_0";
case 0x28bfc: return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X0Y0_1";
case 0x28c00: return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X0Y0_2";
case 0x28c04: return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X0Y0_3";
case 0x28c08: return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X1Y0_0";
case 0x28c0c: return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X1Y0_1";
case 0x28c10: return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X1Y0_2";
case 0x28c14: return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X1Y0_3";
case 0x28c18: return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X0Y1_0";
case 0x28c1c: return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X0Y1_1";
case 0x28c20: return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X0Y1_2";
case 0x28c24: return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X0Y1_3";
case 0x28c28: return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X1Y1_0";
case 0x28c2c: return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X1Y1_1";
case 0x28c30: return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X1Y1_2";
case 0x28c34: return "PA_SC_AA_SAMPLE_LOCS_PIXEL_X1Y1_3";
case 0x28c38: return "PA_SC_AA_MASK_X0Y0_X1Y0";
case 0x28c3c: return "PA_SC_AA_MASK_X0Y1_X1Y1";
case 0x28c58: return "VGT_VERTEX_REUSE_BLOCK_CNTL";
case 0x28c5c: return "VGT_OUT_DEALLOC_CNTL";
case 0x28c60: return "CB_COLOR0_BASE";
case 0x28c64: return "CB_COLOR0_PITCH";
case 0x28c68: return "CB_COLOR0_SLICE";
case 0x28c6c: return "CB_COLOR0_VIEW";
case 0x28c70: return "CB_COLOR0_INFO";
case 0x28c74: return "CB_COLOR0_ATTRIB";
case 0x28c7c: return "CB_COLOR0_CMASK";
case 0x28c80: return "CB_COLOR0_CMASK_SLICE";
case 0x28c84: return "CB_COLOR0_FMASK";
case 0x28c88: return "CB_COLOR0_FMASK_SLICE";
case 0x28c8c: return "CB_COLOR0_CLEAR_WORD0";
case 0x28c90: return "CB_COLOR0_CLEAR_WORD1";
case 0x28c9c: return "CB_COLOR1_BASE";
case 0x28ca0: return "CB_COLOR1_PITCH";
case 0x28ca4: return "CB_COLOR1_SLICE";
case 0x28ca8: return "CB_COLOR1_VIEW";
case 0x28cac: return "CB_COLOR1_INFO";
case 0x28cb0: return "CB_COLOR1_ATTRIB";
case 0x28cb8: return "CB_COLOR1_CMASK";
case 0x28cbc: return "CB_COLOR1_CMASK_SLICE";
case 0x28cc0: return "CB_COLOR1_FMASK";
case 0x28cc4: return "CB_COLOR1_FMASK_SLICE";
case 0x28cc8: return "CB_COLOR1_CLEAR_WORD0";
case 0x28ccc: return "CB_COLOR1_CLEAR_WORD1";
case 0x28cd8: return "CB_COLOR2_BASE";
case 0x28cdc: return "CB_COLOR2_PITCH";
case 0x28ce0: return "CB_COLOR2_SLICE";
case 0x28ce4: return "CB_COLOR2_VIEW";
case 0x28ce8: return "CB_COLOR2_INFO";
case 0x28cec: return "CB_COLOR2_ATTRIB";
case 0x28cf4: return "CB_COLOR2_CMASK";
case 0x28cf8: return "CB_COLOR2_CMASK_SLICE";
case 0x28cfc: return "CB_COLOR2_FMASK";
case 0x28d00: return "CB_COLOR2_FMASK_SLICE";
case 0x28d04: return "CB_COLOR2_CLEAR_WORD0";
case 0x28d08: return "CB_COLOR2_CLEAR_WORD1";
case 0x28d14: return "CB_COLOR3_BASE";
case 0x28d18: return "CB_COLOR3_PITCH";
case 0x28d1c: return "CB_COLOR3_SLICE";
case 0x28d20: return "CB_COLOR3_VIEW";
case 0x28d24: return "CB_COLOR3_INFO";
case 0x28d28: return "CB_COLOR3_ATTRIB";
case 0x28d30: return "CB_COLOR3_CMASK";
case 0x28d34: return "CB_COLOR3_CMASK_SLICE";
case 0x28d38: return "CB_COLOR3_FMASK";
case 0x28d3c: return "CB_COLOR3_FMASK_SLICE";
case 0x28d40: return "CB_COLOR3_CLEAR_WORD0";
case 0x28d44: return "CB_COLOR3_CLEAR_WORD1";
case 0x28d50: return "CB_COLOR4_BASE";
case 0x28d54: return "CB_COLOR4_PITCH";
case 0x28d58: return "CB_COLOR4_SLICE";
case 0x28d5c: return "CB_COLOR4_VIEW";
case 0x28d60: return "CB_COLOR4_INFO";
case 0x28d64: return "CB_COLOR4_ATTRIB";
case 0x28d6c: return "CB_COLOR4_CMASK";
case 0x28d70: return "CB_COLOR4_CMASK_SLICE";
case 0x28d74: return "CB_COLOR4_FMASK";
case 0x28d78: return "CB_COLOR4_FMASK_SLICE";
case 0x28d7c: return "CB_COLOR4_CLEAR_WORD0";
case 0x28d80: return "CB_COLOR4_CLEAR_WORD1";
case 0x28d8c: return "CB_COLOR5_BASE";
case 0x28d90: return "CB_COLOR5_PITCH";
case 0x28d94: return "CB_COLOR5_SLICE";
case 0x28d98: return "CB_COLOR5_VIEW";
case 0x28d9c: return "CB_COLOR5_INFO";
case 0x28da0: return "CB_COLOR5_ATTRIB";
case 0x28da8: return "CB_COLOR5_CMASK";
case 0x28dac: return "CB_COLOR5_CMASK_SLICE";
case 0x28db0: return "CB_COLOR5_FMASK";
case 0x28db4: return "CB_COLOR5_FMASK_SLICE";
case 0x28db8: return "CB_COLOR5_CLEAR_WORD0";
case 0x28dbc: return "CB_COLOR5_CLEAR_WORD1";
case 0x28dc8: return "CB_COLOR6_BASE";
case 0x28dcc: return "CB_COLOR6_PITCH";
case 0x28dd0: return "CB_COLOR6_SLICE";
case 0x28dd4: return "CB_COLOR6_VIEW";
case 0x28dd8: return "CB_COLOR6_INFO";
case 0x28ddc: return "CB_COLOR6_ATTRIB";
case 0x28de4: return "CB_COLOR6_CMASK";
case 0x28de8: return "CB_COLOR6_CMASK_SLICE";
case 0x28dec: return "CB_COLOR6_FMASK";
case 0x28df0: return "CB_COLOR6_FMASK_SLICE";
case 0x28df4: return "CB_COLOR6_CLEAR_WORD0";
case 0x28df8: return "CB_COLOR6_CLEAR_WORD1";
case 0x28e04: return "CB_COLOR7_BASE";
case 0x28e08: return "CB_COLOR7_PITCH";
case 0x28e0c: return "CB_COLOR7_SLICE";
case 0x28e10: return "CB_COLOR7_VIEW";
case 0x28e14: return "CB_COLOR7_INFO";
case 0x28e18: return "CB_COLOR7_ATTRIB";
case 0x28e20: return "CB_COLOR7_CMASK";
case 0x28e24: return "CB_COLOR7_CMASK_SLICE";
case 0x28e28: return "CB_COLOR7_FMASK";
case 0x28e2c: return "CB_COLOR7_FMASK_SLICE";
case 0x28e30: return "CB_COLOR7_CLEAR_WORD0";
case 0x28e34: return "CB_COLOR7_CLEAR_WORD1";
